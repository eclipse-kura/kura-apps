<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2025 Eurotech and/or its affiliates and others

    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
     Eurotech

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.kura.example.driver</groupId>
        <artifactId>org.eclipse.kura.example.driver.parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../bundles/pom.xml</relativePath>
    </parent>

    <artifactId>org.eclipse.kura.example.driver.distrib</artifactId>
    <packaging>pom</packaging>

    <!-- Change this if your org is different -->
    <organization>
        <name>Eclipse Kura</name>
        <url>https://eclipse.dev/kura/</url>
    </organization>

    <properties>
        <!--
            With n being the start level, config.ini will be populated depending on which plugins directory the bundle is put:
            n => bundle.name:@n;
            ns => bundle.name:@n:start;
        -->
        <addon.installation.dir>/opt/eclipse/kura/plugins/6s</addon.installation.dir>

        <!-- name of the JAR produced in bundles/target -->
        <jar.name>org.eclipse.kura.example.driver.bundle</jar.name>

        <!--
            Available DEB architectures:
            all, amd64, arm64

            Available RPM architectures:
            noarch, x86_64, aarch64
        -->
        <deb.architecture>all</deb.architecture>
        <rpm.architecture>noarch</rpm.architecture>

        <!-- final name of the generated debian and rpm package -->
        <package.name>org.eclipse.kura.example.driver</package.name>

        <!-- edit following fields and file deb/control/control -->
        <summary>Summary line (do not end this line with a dot, max 60 chars)</summary>
        <long.description>Here goes the long description of the packages, in this case this is an example addon for the Eclipse Kura Framework.</long.description>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>copy-and-rename-jar</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${project.basedir}/../bundles/${jar.name}/target/${jar.name}-${project.version}.jar</sourceFile>
                            <destinationFile>target/input_files/${jar.name}_${project.version}.jar</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <version>1.12</version>
                <executions>
                    <execution>
                        <id>generate-deb</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <verbose>true</verbose>
                            <deb>${basedir}/target/deb/${package.name}_${project.version}_${deb.architecture}.deb</deb>
                            <controlDir>${project.basedir}/deb/control</controlDir>
                            <skipPOMs>false</skipPOMs>
                            <dataSet>
                                <!-- Repeate the 'data' schema multiple time if you want to manage
                                different files indipendentely, specifying for each one the mapper:
                                it is usefull if different files require different prefix (aka:
                                different destination location) or specific user, group and filemode -->
                                <data>
                                    <src>${basedir}/target/input_files/${jar.name}_${project.version}.jar</src>
                                    <dst>${jar.name}_${project.version}.jar</dst>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${addon.installation.dir}</prefix>
                                        <user>kurad</user>
                                        <group>kurad</group>
                                        <filemode>600</filemode>
                                    </mapper>
                                </data>

                                <!-- 
                                
                                If all the source file are managed in the same way, it is also
                                possible to specify a 'directory' data type to include all the files
                                present in the specify path
                                
                                <data>
                                    <src>${basedir}/target/input_files</src>
                                    <dst>${jar.name}_${project.version}.jar</dst>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${addon.installation.dir}</prefix>
                                        <user>kurad</user>
                                        <group>kurad</group>
                                        <filemode>600</filemode>
                                    </mapper>
                                </data>
                                
                                -->
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.3.0</version>
                <executions>
                    <execution>
                        <id>generate-rpm</id>
                        <phase>package</phase>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                        <configuration>
                            <name>${package.name}</name>
                            <workarea>${basedir}/target/rpm</workarea>
                            <needarch>${rpm.architecture}</needarch>
                            <group>Applications/System</group>
                            <targetOS>linux</targetOS>
                            <summary>${summary}</summary>
                            <description>${long.description}</description>
                            <license>EPL 2.0 (https://www.eclipse.org/legal/epl-2.0/)</license>

                            <mappings>
                                <!-- Repeate the 'mapping' schema multiple time if you want to
                                manage different files indipendentely, specifying for each one the
                                different parameters: it is usefull if different files require
                                different 'directory' (aka: different destination location) or
                                specific username, groupname and filemode -->
                                <mapping>
                                    <directory>${addon.installation.dir}</directory>
                                    <filemode>600</filemode>
                                    <username>kurad</username>
                                    <groupname>kurad</groupname>
                                    <sources>
                                        <!-- It is also possible to specify multiple times the
                                        'source' to include different files from different
                                        locations, but with the same 'directory', 'filemode',
                                        'username' and 'groupname'-->
                                        <source>
                                            <location>${basedir}/target/input_files/${jar.name}_${project.version}.jar</location>
                                        </source>
                                    </sources>
                                </mapping>

                                <!-- 
                                
                                If all the source file are managed in the same way, it is also possible to specify the path to a
                                directory to include all the files present in that
                                
                                <mapping>
                                    <directory>${addon.installation.dir}</directory>
                                    <filemode>600</filemode>
                                    <username>kurad</username>
                                    <groupname>kurad</groupname>
                                    <sources>
                                        <source>
                                            <location>
                                                ${basedir}/target/input_files</location>
                                        </source>
                                    </sources>
                                </mapping>
                                
                                -->
                            </mappings>

                            <requires>
                                <require>kura</require>
                            </requires>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
