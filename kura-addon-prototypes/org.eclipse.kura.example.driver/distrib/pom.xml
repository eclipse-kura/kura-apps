<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2025 Eurotech and/or its affiliates and others

    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
     Eurotech

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.kura.example.driver</groupId>
        <artifactId>org.eclipse.kura.example.driver.parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../bundles/pom.xml</relativePath>
    </parent>

    <artifactId>org.eclipse.kura.example.driver.distrib</artifactId>
    <packaging>pom</packaging>

    <!-- Change this if your org is different -->
    <organization>
        <name>Eclipse Kura</name>
        <url>https://eclipse.dev/kura/</url>
    </organization>

    <properties>
    	
        <!--
            With n being the start level, config.ini will be populated depending on which plugins directory the
        bundle is put:
            n => bundle.name:@n;
            ns => bundle.name:@n:start;
        -->
        <addon.installation.dir>/opt/eclipse/kura/plugins/6s</addon.installation.dir>

        <!-- name of the JAR produced in bundles/target -->
        <jar.name>org.eclipse.kura.example.driver.bundle</jar.name>

        <!--
            Available DEB architectures:
            all, amd64, arm64
        -->
        <deb.architecture>all</deb.architecture>

        <!-- final name of the generated debian package -->
        <package.name>org.eclipse.kura.example.driver</package.name>

        <!-- properties used for artifact upload on artifactory repository -->
        <kura.repo.distribution>CHANGEME</kura.repo.distribution>
        <kura.repo.module>CHANGEME</kura.repo.module>

        <!-- edit following fields and file deb/control/control -->
        <summary>Summary line (do not end this line with a dot, max 60 chars)</summary>
        <long.description>Here goes the long description of the packages, in this case this is an example addon for the Eclipse Kura Framework.</long.description>
    </properties>
	
	<profiles>
        <!-- Internal profile: FOR INTERNAL USE ONLY - active if -DreleaseBuild is *not* specified. -->
        <profile>
            <id>debugBuild</id>
            <activation>
                <property>
                    <name>!releaseBuild</name>
                </property>
            </activation>
            <properties>
                <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
                <package.snapshot>git${maven.build.timestamp}.${git.commit.id.abbrev}</package.snapshot>

                <package.version>${release.version}~${package.snapshot}</package.version>
                <package.revision>1</package.revision>
            </properties>
        </profile>
        <!-- Internal profile: FOR INTERNAL USE ONLY - active if -DreleaseBuild *is* specified. -->
        <profile>
            <id>releaseBuild</id>
            <activation>
                <property>
                    <name>releaseBuild</name>
                </property>
            </activation>
            <properties>
                <package.version>${release.version}</package.version>
                <package.revision>1</package.revision>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                                <id>enforce-no-snapshots</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireReleaseVersion>
                                            <message>No snapshots allowed for release builds!</message>
                                        </requireReleaseVersion>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <build>
        <plugins>
            <!-- Responsible for removing the "-SNAPSHOT" from the project.version -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>release.version</name>
                            <value>${project.version}</value>
                            <regex>-SNAPSHOT</regex>
                            <replacement></replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Responsible for retrieving the short git commit (defaults to length 7)-->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>9.0.1</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <skipPoms>false</skipPoms>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.coderplus.maven.plugins</groupId>
                <artifactId>copy-rename-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>copy-and-rename-jar</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <sourceFile>${project.basedir}/../bundles/${jar.name}/target/${jar.name}-${project.version}.jar</sourceFile>
                            <destinationFile>target/input_files/${jar.name}_${project.version}.jar</destinationFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <version>1.12</version>
                <executions>
                    <execution>
                        <id>generate-deb</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <verbose>true</verbose>
                            <deb>${basedir}/target/deb/${package.name}_${package.version}-${package.revision}_${deb.architecture}.deb</deb>
                            <snapshotExpand>true</snapshotExpand>
                            <snapshotTemplate>${package.snapshot}</snapshotTemplate>
                            <controlDir>${project.basedir}/deb/control</controlDir>
                            <skipPOMs>false</skipPOMs>
                            <dataSet>
                                <!-- Repeate the 'data' schema multiple time if you want to manage
                                different files indipendentely, specifying for each one the mapper:
                                it is usefull if different files require different prefix (aka:
                                different destination location) or specific user, group and filemode -->
                                <data>
                                    <src>${basedir}/target/input_files/${jar.name}_${project.version}.jar</src>
                                    <dst>${jar.name}_${project.version}.jar</dst>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${addon.installation.dir}</prefix>
                                        <user>kurad</user>
                                        <group>kurad</group>
                                        <filemode>600</filemode>
                                    </mapper>
                                </data>

                                <!--

                                If all the source file are managed in the same way, it is also
                                possible to specify a 'directory' data type to include all the files
                                present in the specify path

                                <data>
                                    <src>${basedir}/target/input_files</src>
                                    <dst>${jar.name}_${project.version}.jar</dst>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>${addon.installation.dir}</prefix>
                                        <user>kurad</user>
                                        <group>kurad</group>
                                        <filemode>600</filemode>
                                    </mapper>
                                </data>

                                -->
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
